// protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";

package pod;

option go_package = "./pod";



service EciService {
  rpc SavePod(EciPod) returns (SavePodResp) {}
  rpc SaveVNode(EciVNode) returns (SaveVNodeResp) {}
}


message EciPod {
  string CustomerId = 1;
  string UserId = 2;
  string VNodeId = 3;
  string containerGroupName = 4;
  Pod Pod = 5;
}

message Pod {
  string Id = 1;
  string UID = 2;
  string Status = 3;
  NetworkInfo network = 4;
  int32 Cpu = 5;
  int32 Ram = 6;
  int32 Gpu = 7;
  string CpuType = 8;
  string GpuType = 9;
  bool Boot = 10;
  string RestartPolicy = 11;
  string FamilyId = 12;
  repeated Container  Containers = 13;
}

message NetworkInfo {
  string Ip = 1;
  string Vlan = 2;
  string Gateway = 3;
}

message Container {
  string Name = 1;
  string Image = 2;
  string Status = 3;
  int32 Restart = 4;
  int32 Cpu = 5;
  int32 Ram = 6;
  int32 Gpu = 7;
}

message SavePodResp {
  string Code = 1; // v: required
  string Msg = 2; // v: required
}

message EciVNode {
  string CustomerId = 1;
  string UserId = 2;
  string VNodeId = 3;
  bool Ready = 4;
}

message SaveVNodeResp {
  string Code = 1; // v: required
  string Msg = 2; // v: required
}