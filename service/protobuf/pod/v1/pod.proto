// protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";

package pod;

option go_package = "./pod";

service EciService {
  rpc SavePod(EciPod) returns (SavePodResp) {}
  rpc SaveVNode(EciVNode) returns (SaveVNodeResp) {}
  rpc SendUserNotification(NotifyRequest) returns (NotifyResponse) {}
}

message EciPod {
  string CustomerId = 1;
  string UserId = 2;
  string VNodeId = 3;
  string containerGroupName = 4;
  Pod Pod = 5;
  string spotStrategy = 6;
  string spotPrice = 7;
}

enum PodStatusCode {
  StatusDefault = 0;
  StatusSpotFailed = 1;
  StatusSpotDelayedDelete = 2;
}

message Pod {
  string Id = 1;
  string UID = 2;
  string name = 3;
  string namespace = 4;
  string Status = 5;
  NetworkInfo network = 6;
  int32 Cpu = 7;
  int32 Ram = 8;
  int32 Gpu = 9;
  int32  ephemeralStorage = 10;
  string CpuType = 11;
  string GpuType = 12;
  bool Boot = 13;
  string RestartPolicy = 14;
  string FamilyId = 15;
  repeated Container Containers = 16;
  PodStatusCode code = 17;
}

message NetworkInfo {
  string Ip = 1;
  string Vlan = 2;
  string Gateway = 3;
}

message Container {
  string Name = 1;
  string Image = 2;
  string Status = 3;
  int32 exitCode = 4;
  string reason = 5;
  int32 Restart = 6;
  int32 Cpu = 7;
  int32 Ram = 8;
  int32 Gpu = 9;
}

message SavePodResp {
  string Code = 1; // v: required
  string Msg = 2; // v: required
}

message EciVNode {
  string CustomerId = 1;
  string UserId = 2;
  string VNodeId = 3;
  bool Ready = 4;
}

message SaveVNodeResp {
  string Code = 1; // v: required
  string Msg = 2; // v: required
}

enum NotifyCode {
  SpotFailed = 0;
  SpotCancelDelete = 1;
}

message NotifyRequest {
  string CustomerId = 1;
  string UserId     = 2;
  string Id         = 3;
  NotifyCode code   = 4;
}

message NotifyResponse{}